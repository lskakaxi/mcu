C51 COMPILER V9.52.0.0   TICK                                                              08/22/2013 07:41:16 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TICK
OBJECT MODULE PLACED IN .\tick.obj
COMPILER INVOKED BY: E:\work\tools\Keil\C51\BIN\C51.EXE ..\tick.c ROM(COMPACT) BROWSE DEFINE(_KEIL_C_) DEBUG OBJECTEXTEN
                    -D TABS(2) OBJECT(.\tick.obj)

line level    source

   1          #include "mycar.h"
   2          #include "work.h"
   3          
   4          u32 jiffies, wake_jiffies = -1;
   5          static void schedule(void);
   6          void tick(void)
   7          {
   8   1        kick_wdt();
   9   1        jiffies++;
  10   1        schedule();
  11   1        P1_7 = !P1_7;
  12   1      }
  13          
  14          void setup_tick_timer(void)
  15          {
  16   1        init_timer(0, MODE1_16b, CTL_SW, OP_CLOCK);
  17   1        set_timer(0, 0xffff - MS_CLOCK);
  18   1        start_timer(0);
  19   1      }
  20          
  21          s8 last_worker;
  22          static void schedule(void)
  23          {
  24   1        s8 i = worker_num - 1;
  25   1        u32 next_timing = 0;
  26   1        const struct worker_entry *w_entry;
  27   1      
  28   1        /* NOTICE: we already in irq, no disable_irq needed */
  29   1        for ( ; i >= 0; i--) {
  30   2          w_entry = &work_tbl[i];
  31   2          /* woker has delay of beginning */
  32   2          if (jiffies < w_entry->delay)
  33   2            next_timing = w_entry->delay;
  34   2          else if (w_entry->repeat)
  35   2            next_timing = jiffies + w_entry->timing -
  36   2              ((jiffies - w_entry->delay) % w_entry->timing);
  37   2          else /* overrun the delay and no repeat */
  38   2            continue;
  39   2      
  40   2          if (wake_jiffies > next_timing) {
  41   3            wake_jiffies = next_timing;
  42   3            last_worker = i;
  43   3          }
  44   2        }
  45   1      
  46   1        if (wake_jiffies == jiffies) {
  47   2          workqueue_add(last_worker);
  48   2          /* need re-calc wake_jiffies */
  49   2          wake_jiffies = -1;
  50   2        }
  51   1      
  52   1        pm_idle(wake_jiffies - jiffies);
  53   1      }
  54          
C51 COMPILER V9.52.0.0   TICK                                                              08/22/2013 07:41:16 PAGE 2   

  55          void pm_idle(u8 sleep_tick)
  56          {
  57   1        sleep_tick = sleep_tick;
  58   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    357    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
